# -*- coding: utf-8 -*-
"""FindTheHighestAltitude.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12IsmHnoF9S08v-jvhoRu_3STJ3DQk_Mp
"""

# There is a biker going on a road trip. The road trip consists of n + 1 points at different altitudes. The biker starts his trip on point 0 with altitude equal 0.

# You are given an integer array gain of length n where gain[i] is the net gain in altitude between points i​​​​​​ and i + 1 for all (0 <= i < n). Return the highest altitude of a point.



# Example 1:

# Input: gain = [-5,1,5,0,-7]
# Output: 1
# Explanation: The altitudes are [0,-5,-4,1,1,-6]. The highest is 1.
# Example 2:

# Input: gain = [-4,-3,-2,-1,4,3,2]
# Output: 0
# Explanation: The altitudes are [0,-4,-7,-9,-10,-6,-3,-1]. The highest is 0.


# Constraints:

# n == gain.length
# 1 <= n <= 100
# -100 <= gain[i] <= 100

from typing import List
class Solution:
    def largestAltitude(self, gain: List[int]) -> int:
        i = 0
        currentAlt = 0
        maxAlt = currentAlt
        while i < len(gain):
            currentAlt = currentAlt + gain[i]
            i = i + 1
            if currentAlt > maxAlt:
                maxAlt = currentAlt
        return maxAlt
solution = Solution() #need to make an instance of the class if we have this indentation (outside class)
gain = [-5, 1, 5, 0, -7]
print(solution.largestAltitude(gain)) #expected output = 1

from typing import List
class Solution:
    def largestAltitude(self, gain: List[int]) -> int:
        i = 0
        currentAlt = 0
        maxAlt = currentAlt
        while i < len(gain):
            currentAlt = currentAlt + gain[i]
            i = i + 1
            if currentAlt > maxAlt:
                maxAlt = currentAlt
        return maxAlt
    #since we have indented to be inside of the class, we can see the method and dont have to make an instance of the class like we did above!
    gain = [-5, 1, 5, 0, -7]
    print(solution.largestAltitude(gain)) #expected output = 1