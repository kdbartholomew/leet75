# -*- coding: utf-8 -*-
"""isSubsequence.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jM7EN39dj0x6br01Uye-kzzNGkoWCem5
"""

# Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

# A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).



# Example 1:

# Input: s = "abc", t = "ahbgdc"
# Output: true
# Example 2:

# Input: s = "axc", t = "ahbgdc"
# Output: false


# Constraints:

# 0 <= s.length <= 100
# 0 <= t.length <= 104
# s and t consist only of lowercase English letters.

class Solution:
    def isSubsequence(self, s: str, t: str) -> bool:
        ans = False
        foundCount = 0
        lastIndex = -1

        for letter in s:
            i = 0
            found = False
            while i < len(t):

                if letter == t[i] and i > lastIndex:
                    lastIndex = i
                    foundCount = foundCount + 1
                    found = True
                i = i + 1
                if found == True:
                    break

            if found == False:
                ans = False

        if foundCount == len(s):
            ans = True

        return ans
solution = Solution()
s = "abc"
t = "ahbgdc"
print(solution.isSubsequence(s, t))  # expected output: True